1. To list out the existing images use the below command
  --> docker images
2. To build the image use the below command
  --> docker build -t <your-image-name>:v1  -f <your-project-name>/Dockerfile . 
        -- image name would be any name which you want to create.
        --> For Ex: docker build -t containerapp:v1 -f ContainerApp/Dockerfile .
  --> docker build -t your_dockerhub_username/your_image_name:tag .
3. To run the docker image
  --> docker run -it --rm -p 8080:80 containerapp:v1
  --> docker run -e "ASPNETCORE_ENVIRONMENT=Development" -e "MY_CUSTOM_ENV=some_value" -p 5000:80 cannonballwebapi
4. List out all containers
   - docker ps 
5. In case you want to push your images to Docker Hub use the below commands
    - docker login
6. After Login to push your image to the Docker hub
    - docekr push your_dockerhub_username/your_image_name:tag
7. To see the logs
    - docker logs <container_id>

One of my customer applications uses the below tech stacks
  1. .Net Core WebAPI
  2. Angular 16 with Material Design
  3. MySQL 8.21
  4. Python FastAPI
I have followed the below steps to Contaninerise the Applications
1. .Net API.
  --> Added docker file inside the startup project(API Project) folder, then moved this file just one step back to the current folder
  --> used this command to build the app
        - docker build -t cannonballwebapi .
  --> used this command to run the image in a container
        - docker run -e"ASPNETCORE_ENVIRONMENT=Development" -p 5001:80 cannonballwebapi
2. Angular App
  --> Added docker file and .dockerignore file
  --> docker build -t cannonballui .
3. MySQL
4. Python FastAPI
5. .Net background service

  
